function createfigure(X1, YMatrix1)
%CREATEFIGURE(X1,YMATRIX1)
%  X1:  vector of x data
%  YMATRIX1:  matrix of y data

%  Auto-generated by MATLAB on 08-Aug-2010 19:29:12

% Create figure
figure1 = figure;

% Create axes
axes1 = axes('Parent',figure1,'Position',[0.13 0.1786 0.775 0.7487],...
    'LineWidth',3,...
    'FontSize',24,...
    'FontName','Times New Roman');
% Uncomment the following line to preserve the X-limits of the axes
% xlim([1.2e+018 2.8e+018]);
box('on');
hold('all');

% Create multiple lines using matrix input to plot
plot1 = plot(X1,YMatrix1,'Parent',axes1,'LineWidth',3,'Color',[0 0 0]);
set(plot1(1),'LineStyle','none');
set(plot1(2),'LineStyle','--','DisplayName','SF=1.6');
set(plot1(3),'MarkerSize',0.5,'Marker','square','LineStyle',':',...
    'DisplayName','SF=1.5');
set(plot1(4),'LineStyle','-.','DisplayName','SF=1.4');
set(plot1(5),'MarkerSize',2,'Marker','o','DisplayName','SF=1.3');

% Create xlabel
xlabel('Wavelength (\mum)','FontSize',30,'FontName','Times New Roman');

% Create ylabel
ylabel('GVD (ps/nm-km)','FontSize',30,'FontName','Times New Roman');

% Get xdata from plot
xdata1 = get(plot1(1), 'xdata');
% Get ydata from plot
ydata1 = get(plot1(1), 'ydata');
% Make sure data are column vectors
xdata1 = xdata1(:);
ydata1 = ydata1(:);

% Remove NaN values and warn
nanMask1 = isnan(xdata1(:)) | isnan(ydata1(:));
if any(nanMask1)
    warning('GenerateMFile:IgnoringNaNs', ...
        'Data points with NaN coordinates will be ignored.');
    xdata1(nanMask1) = [];
    ydata1(nanMask1) = [];
end

% Find x values for plotting the fit based on xlim
axesLimits1 = xlim(axes1);
xplot1 = linspace(axesLimits1(1), axesLimits1(2));

% Find coefficients for polynomial (order = 10)
fitResults1 = polyfit(xdata1, ydata1, 10);
% Evaluate polynomial
yplot1 = polyval(fitResults1, xplot1);
% Plot the fit
fitLine1 = plot(xplot1,yplot1,'DisplayName','   10th degree','Parent',axes1,...
    'Tag','10th degree',...
    'MarkerSize',3,...
    'LineWidth',3);

% Set new line in proper position
setLineOrder(axes1, fitLine1, plot1(1));

% Create legend
legend1 = legend(axes1,'show');
set(legend1,'YColor',[1 1 1],'XColor',[1 1 1],...
    'Position',[0.1503 0.205 0.1281 0.4679],...
    'FontSize',30);

%-------------------------------------------------------------------------%
function setLineOrder(axesh1, newLine1, associatedLine1)
%SETLINEORDER(AXESH1,NEWLINE1,ASSOCIATEDLINE1)
%  Set line order
%  AXESH1:  axes
%  NEWLINE1:  new line
%  ASSOCIATEDLINE1:  associated line

% Get the axes children
hChildren = get(axesh1,'Children');
% Remove the new line
hChildren(hChildren==newLine1) = [];
% Get the index to the associatedLine
lineIndex = find(hChildren==associatedLine1);
% Reorder lines so the new line appears with associated data
hNewChildren = [hChildren(1:lineIndex-1);newLine1;hChildren(lineIndex:end)];
% Set the children:
set(axesh1,'Children',hNewChildren);

